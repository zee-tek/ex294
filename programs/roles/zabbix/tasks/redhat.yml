---
- name: 'YUM : GPG key presence'
  become: true
  ansible.builtin.rpm_key:
    state: '{{ zabbix_agent_key_state }}'
    key: '{{ zabbix_repo.key }}'
  vars:
    zabbix_agent_key_state: '{{ "absent" if package_state == "absent" else "present" }}'
  environment:
    http_proxy: '{{ http_proxy | default(None) | default(omit) }}'
    https_proxy: '{{ https_proxy | default(None) | default(omit) }}'

- name: DEBUG
  ansible.builtin.debug:
    var: zabbix_repo.uri
  tags: [never, debug]

- name: 'YUM : Zabbix-release repository presence'
  become: true
  until: zabbix_agent_repository is not failed
  retries: 3
  delay: 3
  ansible.builtin.yum:
    name: '{{ zabbix_repo.uri }}'
  when: package_state != "absent"
  register: zabbix_agent_repository
  environment:
    http_proxy: '{{ http_proxy | default(None) | default(omit) }}'
    https_proxy: '{{ https_proxy | default(None) | default(omit) }}'

### yum in rhel7(and earlier) requires "yum-plugin-priorities" packages installed and loaded
- name: 'YUM : Set Zabbix repo priority'
  when: repository_priority and repository_priority is number
  become: true
  ansible.builtin.lineinfile:
    path: /etc/yum.repos.d/zabbix.repo
    insertafter: '^\[zabbix\]'
    regexp: '^priority='
    line: 'priority={{ repository_priority | string }}'

- name: 'YUM : Plugin "priorities" presence'
  when: >-
    repository_priority and repository_priority is number
    and map_os_transition[ansible_distribution] is defined
    and map_os_transition[ansible_distribution][ansible_distribution_major_version] is defined
    and map_os_transition[ansible_distribution][ansible_distribution_major_version] | int <= 7
  become: true
  until: zabbix_agent_yum_plugin_presence is not failed
  retries: 3
  delay: 3
  register: zabbix_agent_yum_plugin_presence
  ansible.builtin.yum:
    name: 'yum-plugin-priorities'
    state: '{{ package_state }}'

- name: 'YUM : yum clean all'
  when: zabbix_agent_repository.changed
  become: true
  ansible.builtin.command: yum clean all
  register: yum_clean_all
  tags: [skip_ansible_lint]

- name: 'YUM : Zabbix packages presence'
  become: true
  notify: 'Service restart'
  until: zabbix_agent_packages_presence is not failed
  retries: 3
  delay: 3
  register: zabbix_agent_packages_presence
  ansible.builtin.yum:
    name: '{{ zabbix_agent_install_package_list }}'
    state: '{{ package_state }}'
    disablerepo: '{{ repository_disable }}'  # disable epel repos | should contain epel word in repo name
    enablerepo: '{{ zabbix_repo.name }}'
    install_weak_deps: true
    # enable_plugin: priorities ### cant find the plugin by its name... seems bugged
  vars:
    ### if "agent_minor_version" is defined calculate "zabbix_agent_full_version".
    zabbix_agent_full_version: '{{ None if (agent_minor_version is not defined or not agent_minor_version)
      else agent_major_version | string + "." + agent_minor_version | string }}'
    ### change minor version of zabbix components (excluding agent2 plugins). Use single quotes for regex expression!!!
    zabbix_agent_component_package_list: "{{ zabbix_agent_package_list if not zabbix_agent_full_version
      else zabbix_agent_package_list | map('regex_replace', '^(zabbix-(get|sender|agent2|agent))$', '\\1-%s' % zabbix_agent_full_version) | list }}"
    ### change version of agent2 plugins. Use single quotes for regex expression!!!
    zabbix_agent_install_package_list: "{{
      zabbix_agent_component_package_list if (agent2_plugin_version is not defined
                                 or not agent2_plugin_version or agent_variant | string != '2')
      else zabbix_agent_component_package_list | map('regex_replace',
                  '^(zabbix-agent2-plugin-(mongodb|postgresql))$', '\\1-%s' % agent2_plugin_version) | list }}"
  environment:
    http_proxy: '{{ http_proxy | default(None) | default(omit) }}'
    https_proxy: '{{ https_proxy | default(None) | default(omit) }}'
