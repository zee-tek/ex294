---
- name: Import common definitions
  import_role:
    name: openafs_contrib.openafs.openafs_common

- name: Gather variables for each operating system
  include_vars: "{{ afs_krbserver_os_item }}"
  loop_control:
    loop_var: afs_krbserver_os_item
  with_first_found:
    - "{{ role_path }}/vars/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_major_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution | replace(' ', '_') }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_os_family }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_system }}.yaml"
    - "{{ role_path }}/vars/defaults.yaml"

- include_tasks: "system-{{ afs_firewall }}.yaml"
  when: afs_firewall is defined

- name: Install packages
  include_tasks: "{{ afs_krbserver_install_item }}"
  loop_control:
    loop_var: afs_krbserver_install_item
  with_first_found:
    - "{{ role_path }}/tasks/install-packages/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_version }}.yaml"
    - "{{ role_path }}/tasks/install-packages/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_major_version }}.yaml"
    - "{{ role_path }}/tasks/install-packages/{{ ansible_distribution | replace(' ', '_') }}.yaml"
    - "{{ role_path }}/tasks/install-packages/{{ ansible_os_family }}.yaml"
    - "{{ role_path }}/tasks/install-packages/{{ ansible_system }}.yaml"
    - "unknown.yaml"

- name: Store installation facts
  become: yes
  openafs_contrib.openafs.openafs_store_facts:
    state: update
    facts:
      bins:
        kdb5_util: "{{ afs_kdb5_util | d(omit) }}"
      krbserver:
        flavor: "{{ afs_krbserver_flavor }}"
        krb5_conf: "{{ afs_krbserver_krb5_conf | d(omit) }}"
        kdc_conf: "{{ afs_krbserver_kdc_conf | d(omit) }}"
        kadm5_acl: "{{ afs_krbserver_kadm5_acl | d(omit) }}"
        principal: "{{ afs_krbserver_principal | d(omit) }}"
        stash: "{{ afs_krbserver_stash | d(omit) }}"
        dict:  "{{ afs_krbserver_dict | d(omit) }}"
        kdc_service: "{{ afs_krbserver_kdc_service }}"
        admin_service: "{{ afs_krbserver_admin_service }}"
  when: not ansible_check_mode

- include_tasks: "setup/{{ afs_krbserver_flavor }}.yaml"

- name: Start kerberos key server
  become: yes
  service:
    name: "{{ afs_krbserver_kdc_service }}"
    enabled: yes
    state: started
  register: afs_krbserver_kdc_service_result

- name: Start kerberos admin server
  become: yes
  service:
    name: "{{ afs_krbserver_admin_service }}"
    enabled: yes
    state: started
  register: afs_krbserver_admin_service_result
