---
- name: Import common definitions
  import_role:
    name: openafs_contrib.openafs.openafs_common

- name: Gather variables for each operating system
  include_vars: "{{ afs_krbclient_os_item }}"
  loop_control:
    loop_var: afs_krbclient_os_item
  with_first_found:
    - "{{ role_path }}/vars/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_major_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution | replace(' ', '_') }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_os_family }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_system }}.yaml"
    - "{{ role_path }}/vars/defaults.yaml"

- include_tasks: "system-{{ afs_firewall }}.yaml"
  when: afs_firewall is defined

- name: Install packages
  include_tasks: "{{ afs_krbclient_install_item }}"
  loop_control:
    loop_var: afs_krbclient_install_item
  with_first_found:
    - "install-packages/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_version }}.yaml"
    - "install-packages/{{ ansible_distribution | replace(' ', '_') }}-{{ ansible_distribution_major_version }}.yaml"
    - "install-packages/{{ ansible_distribution | replace(' ', '_') }}.yaml"
    - "install-packages/{{ ansible_os_family }}.yaml"
    - "install-packages/{{ ansible_system }}.yaml"
    - "install-packages/unknown.yaml"

- name: Store installation facts
  become: yes
  openafs_contrib.openafs.openafs_store_facts:
    state: update
    facts:
      bins:
        kadmin: "{{ afs_kadmin }}"
        kdestroy: "{{ afs_kdestroy }}"
        kinit: "{{ afs_kinit }}"
  when: not ansible_check_mode

- name: Configure kerberos
  become: yes
  template:
    src: krb5.conf.j2
    dest: "{{ afs_krbclient_krb5_conf }}"
    owner: root
    group: "{{ afs_root_group }}"
    mode: 0644
  when: ansible_local.openafs.krbserver.krb5_conf is not defined
