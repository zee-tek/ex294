---
#
# Install the OpenAFS server with RPM package files. The package
# files are transferred from the controller to a temporary directory
# on the remote node and then installed.
#
- name: Verify the path to the installation tarball is specified
  assert:
    that:
      - afs_install_archive is defined
      - afs_install_archive != ''

- name: Ensure tar is installed
  become: yes
  yum:
    state: present
    name:
      - tar
      - gzip
      - bzip2
  when: ansible_pkg_mgr in ('yum', 'dnf')

- debug:
    msg: "Installing {{ afs_install_archive }}"

- name: Create directory
  file:
    state: directory
    path: "{{ afs_tmpdir }}/install"

- name: Upload package files
  unarchive:
    src: "{{ afs_install_archive }}"
    dest: "{{ afs_tmpdir }}/install/"

- name: Find server package filenames
  find:
    path: "{{ afs_tmpdir }}/install/"
    file_type: file
    recurse: yes
    use_regex: yes
    patterns:
      - "openafs-v?[0-9].*[.]rpm$"
      - "openafs-debuginfo-.*[.]rpm$"
      - "openafs-debugsource-.*[.]rpm$"
      - "openafs-docs-.*[.]rpm$"
      - "openafs-krb5-.*[.]rpm$"
      - "openafs-server-.*[.]rpm$"
    exclude: ".*[.]src[.]rpm$"
  register: find_packages

- set_fact:
    server_packages: "{{ find_packages.files | map(attribute='path') | list }}"

- name: Verify the package files are present
  assert:
    that:
      - server_packages | select('search', '.*/openafs-v?[0-9][^/]*[.]rpm$') | list | count == 1
      - server_packages | select('search', '.*/openafs-server-v?[0-9][^/]*[.]rpm$') | list | count == 1

- name: Install OpenAFS server packages
  become: yes
  yum:
    state: present
    disable_gpg_check: yes
    name: "{{ server_packages }}"

- name: Get installation paths
  openafs_contrib.openafs.openafs_get_install_paths:
  register: install_results

- name: Store installation facts
  become: yes
  openafs_contrib.openafs.openafs_store_facts:
    state: update
    facts:
      install_method: "{{ afs_install_method }}"
      server_installed: yes
      server_service_name: openafs-server
      bins: "{{ install_results.bins }}"
      dirs: "{{ install_results.dirs }}"
  when: not ansible_check_mode

- name: Set the bosserver startup options
  become: yes
  lineinfile:
    path: /etc/sysconfig/openafs
    regexp: '^BOSSERVER_ARGS='
    line: 'BOSSERVER_ARGS="{{ afs_bosserver_opts }}"'
    state: present
  notify:
    - "server configuration changed"
